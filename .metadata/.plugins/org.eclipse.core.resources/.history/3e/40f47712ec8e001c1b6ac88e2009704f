package com.microservices.demo.ui.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.microservices.demo.data.UserRest;
import com.microservices.demo.requestdata.UserDetailRequestData;

@RestController
@RequestMapping("users")
public class UserController {

	@GetMapping()
	public String getUsers(@RequestParam(value="page", defaultValue = "1") int page,
			@RequestParam(value="limit") int limit,
			@RequestParam(value="sort", defaultValue = "asc", required = false) String sort) {
		return "GetUsers was called from page = " + " with limit:" + limit + " by " + sort;
	}
	
	@GetMapping(path="/{userId}", produces = {MediaType.APPLICATION_JSON_VALUE
											, MediaType.APPLICATION_XML_VALUE})
	public ResponseEntity<UserRest> getUser(@PathVariable String userId) {
		UserRest userRest = new UserRest();
		userRest.setGmail("susu@gmail.com");
		userRest.setFirstname("susu");
		userRest.setLastname("thet");
		return new ResponseEntity<UserRest>(userRest, HttpStatus.OK);
	}
	
	@PostMapping(consumes = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE},
				 produces = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE})
	public ResponseEntity<UserRest> createUser(@Validated @RequestBody UserDetailRequestData userDetail) {
		UserRest userRest = new UserRest();
		userRest.setGmail(userDetail.getGmail());
		userRest.setFirstname(userDetail.getFirstname());
		userRest.setLastname(userDetail.getLastname());
		return new ResponseEntity<UserRest>(userRest, HttpStatus.OK);
	}
	
	@PutMapping
	public String updateUser() {
		return "Update User was called";
	}
	
	@DeleteMapping
	public String deleteUser() {
		return "Delete User was called";
	}
}
